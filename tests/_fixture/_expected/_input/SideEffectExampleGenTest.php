<?php
namespace Box\TestScribe\_fixture\_input;

/**
 * Generated by PHPUnit_test_Generator.
 */
class SideEffectExampleGenTest extends \PHPUnit_Framework_TestCase
{
    use \Shmock\Shmockers;

    /**
     * @covers \Box\TestScribe\_fixture\_input\SideEffectExample::LogAMessage
     * @covers \Box\TestScribe\_fixture\_input\SideEffectExample
     */
    public function testLogAMessage()
    {
        // Execute the method under test.

        // Setup mocks for parameters to the constructor.

        /** @var \Box\TestScribe\_fixture\_input\ILog $mockILog1 */
        $mockILog1 = $this->shmock(
            '\\Box\\TestScribe\\_fixture\\_input\\ILog',
            function (
                /** @var \Box\TestScribe\_fixture\_input\ILog|\Shmock\PHPUnitMockInstance $shmock */
                $shmock
            ) {
                $shmock->order_matters();
                $shmock->disable_original_constructor();
                $shmock->dont_preserve_original_methods();

                $shmock->log('LogAMessage logged : a test');
            }
        );

        $objectUnderTest = new \Box\TestScribe\_fixture\_input\SideEffectExample($mockILog1);

        $objectUnderTest->LogAMessage('a test');
    }
}
