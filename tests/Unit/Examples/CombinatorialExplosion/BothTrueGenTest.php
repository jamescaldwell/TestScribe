<?php
namespace Box\TestScribe\Examples\CombinatorialExplosion;

/**
 * Generated by TestScribe.
 */
class BothTrueGenTest extends \PHPUnit_Framework_TestCase
{
    use \Shmock\Shmockers;

    /**
     * @covers \Box\TestScribe\Examples\CombinatorialExplosion\BothTrue::f1
     * @covers \Box\TestScribe\Examples\CombinatorialExplosion\BothTrue
     */
    public function test_f1_1()
    {
        // Execute the method under test.

        $objectUnderTest = new \Box\TestScribe\Examples\CombinatorialExplosion\BothTrue();

        $executionResult = $objectUnderTest->f1(false, false);

        // Validate the execution result.

        $expected = false;
        $this->assertSame(
            $expected,
            $executionResult,
            'Variable ( executionResult ) doesn\'t have the expected value.'
        );
    }

    /**
     * @covers \Box\TestScribe\Examples\CombinatorialExplosion\BothTrue::f1
     * @covers \Box\TestScribe\Examples\CombinatorialExplosion\BothTrue
     */
    public function test_f1_2()
    {
        // Execute the method under test.

        $objectUnderTest = new \Box\TestScribe\Examples\CombinatorialExplosion\BothTrue();

        $executionResult = $objectUnderTest->f1(false, true);

        // Validate the execution result.

        $expected = false;
        $this->assertSame(
            $expected,
            $executionResult,
            'Variable ( executionResult ) doesn\'t have the expected value.'
        );
    }

    /**
     * @covers \Box\TestScribe\Examples\CombinatorialExplosion\BothTrue::f1
     * @covers \Box\TestScribe\Examples\CombinatorialExplosion\BothTrue
     */
    public function test_f1_3()
    {
        // Execute the method under test.

        $objectUnderTest = new \Box\TestScribe\Examples\CombinatorialExplosion\BothTrue();

        $executionResult = $objectUnderTest->f1(true, false);

        // Validate the execution result.

        $expected = false;
        $this->assertSame(
            $expected,
            $executionResult,
            'Variable ( executionResult ) doesn\'t have the expected value.'
        );
    }

    /**
     * @covers \Box\TestScribe\Examples\CombinatorialExplosion\BothTrue::f1
     * @covers \Box\TestScribe\Examples\CombinatorialExplosion\BothTrue
     */
    public function test_f1_4()
    {
        // Execute the method under test.

        $objectUnderTest = new \Box\TestScribe\Examples\CombinatorialExplosion\BothTrue();

        $executionResult = $objectUnderTest->f1(true, true);

        // Validate the execution result.

        $expected = true;
        $this->assertSame(
            $expected,
            $executionResult,
            'Variable ( executionResult ) doesn\'t have the expected value.'
        );
    }
}
