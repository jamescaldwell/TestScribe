<?php
namespace Box\TestScribe\Config;

/**
 * Generated by TestScribe.
 */
class StaticConfigHelperGenTest extends \PHPUnit_Framework_TestCase
{
    use \Shmock\Shmockers;

    /**
     * @covers \Box\TestScribe\Config\StaticConfigHelper::computeSpecFilePath
     * @covers \Box\TestScribe\Config\StaticConfigHelper
     */
    public function test_computeSpecFilePath()
    {
        // Setup mocks for parameters to the method under test.

        /** @var \Box\TestScribe\ClassInfo\PhpClassName $mockPhpClassName */
        $mockPhpClassName = $this->shmock(
            '\\Box\\TestScribe\\ClassInfo\\PhpClassName',
            function (
                /** @var \Box\TestScribe\ClassInfo\PhpClassName|\Shmock\PHPUnitMockInstance $shmock */
                $shmock
            ) {
                $shmock->order_matters();
                $shmock->disable_original_constructor();

                /** @var $mock \Shmock\Spec */
                $mock = $shmock->getClassName();
                $mock->return_value('inClassName');
            }
        );

        // Execute the method under test.

        $executionResult = \Box\TestScribe\Config\StaticConfigHelper::computeSpecFilePath($mockPhpClassName, 'out/source/path');

        // Validate the execution result.

        $expected = 'out/source/path/inClassName_ts.yaml';
        $this->assertSame(
            $expected,
            $executionResult,
            'Variable ( executionResult ) doesn\'t have the expected value.'
        );
    }
}
