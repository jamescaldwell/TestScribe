<?php
namespace Box\TestScribe\Utils;

/**
 * Generated by TestScribe.
 */
class MockClassUtilGenTest extends \PHPUnit_Framework_TestCase
{
    use \Shmock\Shmockers;

    /**
     * @covers Box\TestScribe\Utils\MockClassUtil::isMockClass
     */
    public function testIsMockClassFalseCase()
    {
        // Execute the method under test.

        $objectUnderTest = new \Box\TestScribe\Utils\MockClassUtil();
        $executionResult = $objectUnderTest->isMockClass('foo\bar');

        // Validate the execution result.

        $expected = false;
        $this->assertSame(
            $expected,
            $executionResult,
            'Variable ( executionResult ) doesn\'t have the expected value.'
        );
    }


    /**
     * @covers Box\TestScribe\Utils\MockClassUtil::isMockClass
     */
    public function testIsMockClassIsAMock()
    {

        // Execute the method under test.

        $objectUnderTest = new \Box\TestScribe\Utils\MockClassUtil();
        $executionResult = $objectUnderTest->isMockClass('_GEN_MOCK_foo');

        // Validate the execution result.

        $expected = true;
        $this->assertSame(
            $expected,
            $executionResult,
            'Variable ( executionResult ) doesn\'t have the expected value.'
        );
    }

}
