<?php
namespace Box\TestScribe;


/**
 * Generated by PHPUnit_test_Generator.
 */
class StringWithMocksGenTest extends \PHPUnit_Framework_TestCase
{
    use \Shmock\Shmockers;

    /**
     * @covers \Box\TestScribe\ExpressionWithMocks::getExpression
     */
    public function testGetStr()
    {
        // Setup mocks injected by the dependency management system when required.

        // Setup mocks for parameters to the method under test when required.

        // Setup mocks for the constructor of the class under test when required.

        $objectUnderTest = new Input\ExpressionWithMocks(
            'testInput', array(
            0 => 'mock',
            1 => 'mock2',
        )
        );
        $executionResult = $objectUnderTest->getExpression();
        $executionResultAsString = var_export($executionResult, true);
        $expectedString = <<<'MY_LONG_END_OF_TEXT_a1b9'
'testInput'
MY_LONG_END_OF_TEXT_a1b9;
        $this->assertSame(
            $expectedString,
            $executionResultAsString,
            "The execution result doesn't match the expectation."
        );
    }

    /**
     * @covers \Box\TestScribe\ExpressionWithMocks::getMocks
     */
    public function testGetMocks()
    {
        // Setup mocks injected by the dependency management system when required.

        // Setup mocks for parameters to the method under test when required.

        // Setup mocks for the constructor of the class under test when required.

        // @TODO (ryang 12/8/14) : After the generator is updated to support inputting an array of objects,
        // update this unit test to input array of the correct type.
        $objectUnderTest = new Input\ExpressionWithMocks(
            'testInputStr', array(
            0 => 'mock1',
            1 => 'mock2',
        )
        );
        $executionResult = $objectUnderTest->getMocks();
        $executionResultAsString = var_export($executionResult, true);
        $expectedString = <<<'MY_LONG_END_OF_TEXT_a1b9'
array (
  0 => 'mock1',
  1 => 'mock2',
)
MY_LONG_END_OF_TEXT_a1b9;
        $this->assertSame(
            $expectedString,
            $executionResultAsString,
            "The execution result doesn't match the expectation."
        );
    }
}
