<?php
namespace Box\TestScribe;

use Box\TestScribe\Utils\Util;

/**
 * Generated by PHPUnit_test_Generator.
 */
class UtilGenTest extends \PHPUnit_Framework_TestCase
{
    use \Shmock\Shmockers;

    /**
     * @covers \Box\TestScribe\Utils\Util::appendStringIfNotEmpty
     * @covers \Box\TestScribe\Utils\Util
     */
    public function testAppendStringIfNotEmpty_empty_text()
    {
        // Execute the method under test.

        $executionResult = Util::appendStringIfNotEmpty('a', '');

        // Validate the execution result.

        $expected = '';
        $this->assertSame(
            $expected,
            $executionResult,
            'Variable ( executionResult ) doesn\'t have the expected value.'
        );
    }

    /**
     * @covers \Box\TestScribe\Utils\Util::appendStringIfNotEmpty
     * @covers \Box\TestScribe\Utils\Util
     */
    public function testAppendStringIfNotEmpty_non_empty_text()
    {
        // Execute the method under test.

        $executionResult = Util::appendStringIfNotEmpty('a', 'b');

        // Validate the execution result.

        $expected = 'ab';
        $this->assertSame(
            $expected,
            $executionResult,
            'Variable ( executionResult ) doesn\'t have the expected value.'
        );
    }
}
